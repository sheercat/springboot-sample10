buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'springboot-sample10'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile 'org.lazyluke:log4jdbc-remix:0.2.7'
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
    compile('postgresql:postgresql:9.0-801.jdbc4')
    compile('org.webjars:bootstrap:3.2.0')
    compile('org.flywaydb:flyway-core')
    compile('org.apache.commons:commons-lang3:3.4')
    compileOnly('org.projectlombok:lombok')
    runtime('com.h2database:h2')
    testCompile 'io.rest-assured:rest-assured:3.0.7'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0'
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}
